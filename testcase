from sqlalchemy import create_engine, MetaData, Table, Column, Integer, String
from sqlalchemy.exc import SQLAlchemyError
from sqlalchemy.sql import text

# Replace with your MySQL connection details
MYSQL_SERVER_URI = 'mysql+mysqlconnector://myuser:mypassword@localhost'
DATABASE_NAME = 'temple_inscriptions'
DATABASE_URI = f'mysql+mysqlconnector://myuser:mypassword@localhost/{DATABASE_NAME}'

# Create MySQL engine for server connection
server_engine = create_engine(MYSQL_SERVER_URI)

# Create the database if it doesn't exist
try:
    with server_engine.connect() as connection:
        connection.execute(text(f"CREATE DATABASE IF NOT EXISTS {DATABASE_NAME}"))
    print(f"Database '{DATABASE_NAME}' created or already exists.")
except SQLAlchemyError as e:
    print(f"Error creating database: {e}")

# Create MySQL engine for database connection
engine = create_engine(DATABASE_URI)

# Define metadata
metadata = MetaData()

# Define table structure
inscriptions_table = Table(
    'inscriptions', metadata,
    Column('id', Integer, primary_key=True, autoincrement=True),
    Column('image_url', String(255), nullable=False),
    Column('inscription_text', String(255), nullable=False)
)

# Create the table if it doesn't exist
try:
    metadata.create_all(engine)
    print("Table 'inscriptions' created successfully.")
except SQLAlchemyError as e:
    print(f"Error creating table: {e}")

# Sample data to be inserted
sample_data = [
    {"image_url": "http://example.com/image1.jpg", "inscription_text": "Inscription text for image 1"},
    {"image_url": "http://example.com/image2.jpg", "inscription_text": "Inscription text for image 2"},
    {"image_url": "http://example.com/image3.jpg", "inscription_text": "Inscription text for image 3"},
]

# Insert sample data into the table
try:
    with engine.connect() as connection:
        for data in sample_data:
            connection.execute(inscriptions_table.insert().values(data))
        print("Sample data inserted successfully.")
except SQLAlchemyError as e:
    print(f"Error inserting data: {e}")
